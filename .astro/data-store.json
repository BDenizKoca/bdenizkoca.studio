[["Map",1,2,9,10,101,102],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.14.8","content-config-digest","c282b7546a41c38b","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://bdenizkoca.studio\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"i18n\":{\"defaultLocale\":\"en\",\"locales\":[\"en\",\"tr\"],\"routing\":{\"prefixDefaultLocale\":false,\"redirectToDefaultLocale\":true,\"fallbackType\":\"redirect\"}},\"security\":{\"checkOrigin\":true,\"allowedDomains\":[]},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"staticImportMetaEnv\":false,\"chromeDevtoolsWorkspace\":false,\"failOnPrerenderConflict\":false},\"legacy\":{\"collections\":false}}","projects",["Map",11,12,62,63],"en/tideflow",{"id":11,"data":13,"body":41,"filePath":42,"digest":43,"rendered":44,"legacyId":61},{"title":14,"description":15,"date":16,"updated":17,"cover_image":18,"hover_video":19,"thumbnail":18,"slider_items":20,"tags":32,"lang":37,"order":38,"show_on_homepage":39,"meta_title":40,"meta_description":15},"Tideflow - Effortless Markdown to PDF Editor","A fast, offline-first Markdown to PDF desktop app designed to help you focus on one thing: writing.",["Date","2023-10-26T00:00:00.000Z"],["Date","2025-10-20T00:00:00.000Z"],"https://file.garden/aLboplo8eB2dIZKp/GitHub/TideFlow/tideflow-hero.png","https://file.garden/aLboplo8eB2dIZKp/GitHub/TideFlow/497613832-fea9562b-a315-44c1-abc9-1778ab4cd428%20(1).mp4",[21,23,26,28,30],{"type":22,"src":19},"video",{"type":24,"src":25},"image","https://file.garden/aLboplo8eB2dIZKp/GitHub/TideFlow/tideflow1.png",{"type":24,"src":27},"https://file.garden/aLboplo8eB2dIZKp/GitHub/TideFlow/tideflow2.png",{"type":24,"src":29},"https://file.garden/aLboplo8eB2dIZKp/GitHub/TideFlow/tideflow3.png",{"type":24,"src":31},"https://file.garden/aLboplo8eB2dIZKp/GitHub/TideFlow/tideflow4.png",[33,34,35,36],"Desktop App","Markdown","PDF","Open Source","en",1,true,"Tideflow — Project by Deniz Koca","\u003Cdiv class=\"page-content container\">\r\n  \u003Cdiv class=\"feature-intro\">\r\n    \u003Ch1>Freedom in Creativity, Power in Automation\u003C/h1>\r\n    \u003Cp>TideFlow is a simple, fast, and reliable editor for writing and formatting Markdown files, then exporting them as beautifully rendered PDFs. For more background on how it was built, see \u003Ca href=\"/notes/creating-tideflow/\">Creating TideFlow\u003C/a>. Core features include:\u003C/p>\r\n  \u003C/div>\r\n\r\n  \u003Cul class=\"feature-list\">\r\n    \u003Cli>\u003Cstrong>Real-time two-way scroll sync:\u003C/strong> Your editor and preview are always in sync, so you never lose your place.\u003C/li>\r\n    \u003Cli>\u003Cstrong>Clean editor:\u003C/strong> A clean and modern editor powered by CodeMirror 6, designed for focus.\u003C/li>\r\n    \u003Cli>\u003Cstrong>Advanced Export Formats (PNG & SVG):\u003C/strong> Export your documents as high-quality PNG images or scalable SVG vectors.\u003C/li>\r\n    \u003Cli>\u003Cstrong>Automatic Table of Contents:\u003C/strong> Generate a TOC for your document with a single click.\u003C/li>\r\n    \u003Cli>\u003Cstrong>Configurable Cover Page:\u003C/strong> Add a professional touch with a customizable cover page.\u003C/li>\r\n    \u003Cli>\u003Cstrong>12 Themes:\u003C/strong> Choose from a dozen themes to style your PDFs to your liking.\u003C/li>\r\n    \u003Cli>\u003Cstrong>Offline & Cross-Platform:\u003C/strong> Works entirely offline on Windows, macOS, and Linux.\u003C/li>\r\n  \u003C/ul>\r\n\r\n  \u003Cdiv class=\"opensource-section\">\r\n    \u003Ch2>Completely Open Source\u003C/h2>\r\n    \u003Cp>TideFlow is a free and open-source project. You can download the installation files from the GitHub releases page. You can also check out all the code and see how it works on GitHub! If you appreciate TideFlow and want to support the project, you can sponsor it through GitHub.\u003C/p>\r\n    \u003Cdiv class=\"button-group\">\r\n      \u003Ca href=\"https://github.com/BDenizKoca/Tideflow-md-to-pdf/releases\" class=\"button button-primary\" target=\"_blank\" rel=\"noopener noreferrer\">Download for Free\u003C/a>\r\n      \u003Ca href=\"https://github.com/BDenizKoca/Tideflow-md-to-pdf\" class=\"button github-star-button\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        \u003Cspan class=\"button-text\">View on GitHub\u003C/span>\r\n        \u003Cspan class=\"star-count\" data-repo=\"BDenizKoca/Tideflow-md-to-pdf\">★ ...\u003C/span>\r\n      \u003C/a>\r\n      \u003Ca href=\"https://github.com/sponsors/BDenizKoca\" class=\"button button-secondary\" target=\"_blank\" rel=\"noopener noreferrer\">Sponsor\u003C/a>\r\n    \u003C/div>\r\n  \u003C/div>\r\n\r\n  \u003Chr>\r\n\r\n  \u003Cdiv class=\"highlight-section\">\r\n    \u003Ch2>Unlock Your Ultimate Writing Workflow with \u003Cstrong>Tideflow Pro\u003C/strong>\u003C/h2>\r\n    \u003Cp>This one-time $10 purchase permanently unlocks an additional set of powerful features for professionals, students, and power users. The Pro Version adds:\u003C/p>\r\n    \u003Cul>\r\n      \u003Cli>\u003Cstrong>Batch Export:\u003C/strong> Convert an entire folder of Markdown files to PDF at once.\u003C/li>\r\n      \u003Cli>\u003Cstrong>Import/Export Presets:\u003C/strong> Bring your custom themes anywhere, or share them with friends.\u003C/li>\r\n    \u003C/ul>\r\n    \u003Ca href=\"https://payhip.com/b/wVBeS\" class=\"button\" target=\"_blank\" rel=\"noopener noreferrer\">Buy Tideflow Pro for $10\u003C/a>\r\n  \u003C/div>\r\n\u003C/div>","src/content/projects/en/tideflow.md","68846992e634695b",{"html":45,"metadata":46},"\u003Cdiv class=\"page-content container\">\n  \u003Cdiv class=\"feature-intro\">\n    \u003Ch1>Freedom in Creativity, Power in Automation\u003C/h1>\n    \u003Cp>TideFlow is a simple, fast, and reliable editor for writing and formatting Markdown files, then exporting them as beautifully rendered PDFs. For more background on how it was built, see \u003Ca href=\"/notes/creating-tideflow/\">Creating TideFlow\u003C/a>. Core features include:\u003C/p>\n  \u003C/div>\n  \u003Cul class=\"feature-list\">\n    \u003Cli>\u003Cstrong>Real-time two-way scroll sync:\u003C/strong> Your editor and preview are always in sync, so you never lose your place.\u003C/li>\n    \u003Cli>\u003Cstrong>Clean editor:\u003C/strong> A clean and modern editor powered by CodeMirror 6, designed for focus.\u003C/li>\n    \u003Cli>\u003Cstrong>Advanced Export Formats (PNG &#x26; SVG):\u003C/strong> Export your documents as high-quality PNG images or scalable SVG vectors.\u003C/li>\n    \u003Cli>\u003Cstrong>Automatic Table of Contents:\u003C/strong> Generate a TOC for your document with a single click.\u003C/li>\n    \u003Cli>\u003Cstrong>Configurable Cover Page:\u003C/strong> Add a professional touch with a customizable cover page.\u003C/li>\n    \u003Cli>\u003Cstrong>12 Themes:\u003C/strong> Choose from a dozen themes to style your PDFs to your liking.\u003C/li>\n    \u003Cli>\u003Cstrong>Offline &#x26; Cross-Platform:\u003C/strong> Works entirely offline on Windows, macOS, and Linux.\u003C/li>\n  \u003C/ul>\n  \u003Cdiv class=\"opensource-section\">\n    \u003Ch2>Completely Open Source\u003C/h2>\n    \u003Cp>TideFlow is a free and open-source project. You can download the installation files from the GitHub releases page. You can also check out all the code and see how it works on GitHub! If you appreciate TideFlow and want to support the project, you can sponsor it through GitHub.\u003C/p>\n    \u003Cdiv class=\"button-group\">\n      \u003Ca href=\"https://github.com/BDenizKoca/Tideflow-md-to-pdf/releases\" class=\"button button-primary\" target=\"_blank\" rel=\"noopener noreferrer\">Download for Free\u003C/a>\n      \u003Ca href=\"https://github.com/BDenizKoca/Tideflow-md-to-pdf\" class=\"button github-star-button\" target=\"_blank\" rel=\"noopener noreferrer\">\n        \u003Cspan class=\"button-text\">View on GitHub\u003C/span>\n        \u003Cspan class=\"star-count\" data-repo=\"BDenizKoca/Tideflow-md-to-pdf\">★ ...\u003C/span>\n      \u003C/a>\n      \u003Ca href=\"https://github.com/sponsors/BDenizKoca\" class=\"button button-secondary\" target=\"_blank\" rel=\"noopener noreferrer\">Sponsor\u003C/a>\n    \u003C/div>\n  \u003C/div>\n  \u003Chr>\n  \u003Cdiv class=\"highlight-section\">\n    \u003Ch2>Unlock Your Ultimate Writing Workflow with \u003Cstrong>Tideflow Pro\u003C/strong>\u003C/h2>\n    \u003Cp>This one-time $10 purchase permanently unlocks an additional set of powerful features for professionals, students, and power users. The Pro Version adds:\u003C/p>\n    \u003Cul>\n      \u003Cli>\u003Cstrong>Batch Export:\u003C/strong> Convert an entire folder of Markdown files to PDF at once.\u003C/li>\n      \u003Cli>\u003Cstrong>Import/Export Presets:\u003C/strong> Bring your custom themes anywhere, or share them with friends.\u003C/li>\n    \u003C/ul>\n    \u003Ca href=\"https://payhip.com/b/wVBeS\" class=\"button\" target=\"_blank\" rel=\"noopener noreferrer\">Buy Tideflow Pro for $10\u003C/a>\n  \u003C/div>\n\u003C/div>",{"headings":47,"localImagePaths":48,"remoteImagePaths":49,"frontmatter":50,"imagePaths":60},[],[],[],{"title":14,"description":15,"date":51,"updated":52,"order":38,"cover_image":18,"thumbnail":18,"hover_video":19,"slider_items":53,"show_on_homepage":39,"lang":37,"meta_title":40,"meta_description":15,"tags":59},["Date","2023-10-26T00:00:00.000Z"],["Date","2025-10-20T00:00:00.000Z"],[54,55,56,57,58],{"type":22,"src":19},{"type":24,"src":25},{"type":24,"src":27},{"type":24,"src":29},{"type":24,"src":31},[33,34,35,36],[],"en/tideflow.md","tideflow",{"id":62,"data":64,"body":80,"filePath":81,"digest":82,"rendered":83,"legacyId":100},{"title":65,"description":66,"date":67,"updated":68,"cover_image":18,"hover_video":19,"thumbnail":18,"slider_items":69,"tags":75,"lang":78,"order":38,"show_on_homepage":39,"meta_title":79,"meta_description":66},"Tideflow - Yalın Bir Markdown-PDF Dönüştürücüsü","Odağınızı korumanıza yardımcı olmak üzere tasarlanmış, çevrimdışı çalışan, hızlı bir Markdown-PDF masaüstü uygulaması.",["Date","2023-10-26T00:00:00.000Z"],["Date","2025-10-20T00:00:00.000Z"],[70,71,72,73,74],{"type":22,"src":19},{"type":24,"src":25},{"type":24,"src":27},{"type":24,"src":29},{"type":24,"src":31},[76,34,35,77],"Masaüstü Uygulaması","Açık Kaynak","tr","Tideflow — Deniz Koca'nın Projesi","\u003Cdiv class=\"page-content container\">\r\n  \u003Cdiv class=\"feature-intro\">\r\n    \u003Ch1>Yaratıcılıkta Özgürlük, Otomasyonda Ustalık\u003C/h1>\r\n    \u003Cp>TideFlow, markdown belgelerinizi süratle düzenleyip PDF biçimine dönüştürmenizi sağlayan yalın bir yazılımdır. Projenin geliştirilme sürecine dair bilgi için \u003Ca href=\"/tr/notlar/creating-tideflow-tr/\">TideFlow'un Geliştirilmesi\u003C/a> başlıklı yazıya göz atabilirsiniz. Tideflow'un başlıca nitelikleri şunlardır:\u003C/p>\r\n  \u003C/div>\r\n\r\n  \u003Cul class=\"feature-list\">\r\n    \u003Cli>\u003Cstrong>Eşzamanlı kaydırma:\u003C/strong> Yazım ve önizleme alanları eşzamanlı olarak hareket eder, böylece çalışmanızda nerede olduğunuzu asla kaybetmezsiniz.\u003C/li>\r\n    \u003Cli>\u003Cstrong>Sade arayüz:\u003C/strong> CodeMirror 6 altyapısını kullanan, dikkatiniz dağılmadan çalışmanız için tasarlanmış sade ve çağdaş bir yazım alanı.\u003C/li>\r\n    \u003Cli>\u003Cstrong>Gelişmiş Dışa Aktarım Biçimleri (PNG ve SVG):\u003C/strong> Belgelerinizi yüksek nitelikli PNG resimleri veya ölçeklenebilir SVG vektörleri olarak dışa aktarın.\u003C/li>\r\n    \u003Cli>\u003Cstrong>Otomatik İçindekiler Dizini:\u003C/strong> Tek bir tıklamayla belgeniz için bir içindekiler dizini oluşturun.\u003C/li>\r\n    \u003Cli>\u003Cstrong>Ayarlanabilir Kapak Sayfası:\u003C/strong> Özelleştirilebilir bir kapak sayfasıyla belgelerinize kurumsal bir görünüm katın.\u003C/li>\r\n    \u003Cli>\u003Cstrong>12 Farklı Tema:\u003C/strong> PDF belgelerinize istediğiniz görünümü kazandırmak için sunulan on iki tema arasından seçim yapın.\u003C/li>\r\n    \u003Cli>\u003Cstrong>Çevrimdışı ve Çoklu Platform Desteği:\u003C/strong> Windows, macOS ve Linux işletim sistemlerinde internet bağlantısı olmadan çalışır.\u003C/li>\r\n  \u003C/ul>\r\n\r\n  \u003Cdiv class=\"opensource-section\">\r\n    \u003Ch2>Tümüyle Açık Kaynaklı\u003C/h2>\r\n    \u003Cp>TideFlow, ücretsiz ve açık kaynaklı bir projedir. Kurulum dosyalarına GitHub üzerindeki sürüm sayfasından erişebilirsiniz. Kaynak kodunun tamamını GitHub'da inceleyerek yazılımın nasıl çalıştığını görebilirsiniz. Projeyi beğendiyseniz, GitHub üzerinden sponsor olarak gelişimine destek olabilirsiniz.\u003C/p>\r\n    \u003Cdiv class=\"button-group\">\r\n      \u003Ca href=\"https://github.com/BDenizKoca/Tideflow-md-to-pdf/releases\" class=\"button button-primary\" target=\"_blank\" rel=\"noopener noreferrer\">Ücretsiz İndirin\u003C/a>\r\n      \u003Ca href=\"https://github.com/BDenizKoca/Tideflow-md-to-pdf\" class=\"button github-star-button\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        \u003Cspan class=\"button-text\">GitHub'da Görüntüle\u003C/span>\r\n        \u003Cspan class=\"star-count\" data-repo=\"BDenizKoca/Tideflow-md-to-pdf\">★ ...\u003C/span>\r\n      \u003C/a>\r\n      \u003Ca href=\"https://github.com/sponsors/BDenizKoca\" class=\"button button-secondary\" target=\"_blank\" rel=\"noopener noreferrer\">Sponsor Olun\u003C/a>\r\n    \u003C/div>\r\n  \u003C/div>\r\n\r\n  \u003Chr>\r\n\r\n  \u003Cdiv class=\"highlight-section\">\r\n    \u003Ch2>\u003Cstrong>Tideflow Pro\u003C/strong> ile Yazım Süreçlerinizi Geliştirin\u003C/h2>\r\n    \u003Cp>Yalnızca bir defaya mahsus $10 ödeme ile profesyoneller, öğrenciler ve ileri düzey kullanıcılar için geliştirilmiş ek özelliklere kalıcı olarak sahip olun. Pro Sürümü şu olanakları sunar:\u003C/p>\r\n    \u003Cul>\r\n      \u003Cli>\u003Cstrong>Toplu Dışa Aktarım:\u003C/strong> Bir dizin dolusu Markdown belgesini tek seferde PDF'e dönüştürün.\u003C/li>\r\n      \u003Cli>\u003Cstrong>Ayar Profillerini İçe/Dışa Aktarma:\u003C/strong> Oluşturduğunuz özel temaları ve ayarları dışa aktararak paylaşın veya farklı cihazlarda kullanın.\u003C/li>\r\n    \u003C/ul>\r\n    \u003Ca href=\"https://payhip.com/b/wVBeS\" class=\"button\" target=\"_blank\" rel=\"noopener noreferrer\">Tideflow Pro'yu $10'a Satın Al\u003C/a>\r\n  \u003C/div>\r\n\u003C/div>","src/content/projects/tr/tideflow.md","0c569ad1dec7416b",{"html":84,"metadata":85},"\u003Cdiv class=\"page-content container\">\n  \u003Cdiv class=\"feature-intro\">\n    \u003Ch1>Yaratıcılıkta Özgürlük, Otomasyonda Ustalık\u003C/h1>\n    \u003Cp>TideFlow, markdown belgelerinizi süratle düzenleyip PDF biçimine dönüştürmenizi sağlayan yalın bir yazılımdır. Projenin geliştirilme sürecine dair bilgi için \u003Ca href=\"/tr/notlar/creating-tideflow-tr/\">TideFlow'un Geliştirilmesi\u003C/a> başlıklı yazıya göz atabilirsiniz. Tideflow'un başlıca nitelikleri şunlardır:\u003C/p>\n  \u003C/div>\n  \u003Cul class=\"feature-list\">\n    \u003Cli>\u003Cstrong>Eşzamanlı kaydırma:\u003C/strong> Yazım ve önizleme alanları eşzamanlı olarak hareket eder, böylece çalışmanızda nerede olduğunuzu asla kaybetmezsiniz.\u003C/li>\n    \u003Cli>\u003Cstrong>Sade arayüz:\u003C/strong> CodeMirror 6 altyapısını kullanan, dikkatiniz dağılmadan çalışmanız için tasarlanmış sade ve çağdaş bir yazım alanı.\u003C/li>\n    \u003Cli>\u003Cstrong>Gelişmiş Dışa Aktarım Biçimleri (PNG ve SVG):\u003C/strong> Belgelerinizi yüksek nitelikli PNG resimleri veya ölçeklenebilir SVG vektörleri olarak dışa aktarın.\u003C/li>\n    \u003Cli>\u003Cstrong>Otomatik İçindekiler Dizini:\u003C/strong> Tek bir tıklamayla belgeniz için bir içindekiler dizini oluşturun.\u003C/li>\n    \u003Cli>\u003Cstrong>Ayarlanabilir Kapak Sayfası:\u003C/strong> Özelleştirilebilir bir kapak sayfasıyla belgelerinize kurumsal bir görünüm katın.\u003C/li>\n    \u003Cli>\u003Cstrong>12 Farklı Tema:\u003C/strong> PDF belgelerinize istediğiniz görünümü kazandırmak için sunulan on iki tema arasından seçim yapın.\u003C/li>\n    \u003Cli>\u003Cstrong>Çevrimdışı ve Çoklu Platform Desteği:\u003C/strong> Windows, macOS ve Linux işletim sistemlerinde internet bağlantısı olmadan çalışır.\u003C/li>\n  \u003C/ul>\n  \u003Cdiv class=\"opensource-section\">\n    \u003Ch2>Tümüyle Açık Kaynaklı\u003C/h2>\n    \u003Cp>TideFlow, ücretsiz ve açık kaynaklı bir projedir. Kurulum dosyalarına GitHub üzerindeki sürüm sayfasından erişebilirsiniz. Kaynak kodunun tamamını GitHub'da inceleyerek yazılımın nasıl çalıştığını görebilirsiniz. Projeyi beğendiyseniz, GitHub üzerinden sponsor olarak gelişimine destek olabilirsiniz.\u003C/p>\n    \u003Cdiv class=\"button-group\">\n      \u003Ca href=\"https://github.com/BDenizKoca/Tideflow-md-to-pdf/releases\" class=\"button button-primary\" target=\"_blank\" rel=\"noopener noreferrer\">Ücretsiz İndirin\u003C/a>\n      \u003Ca href=\"https://github.com/BDenizKoca/Tideflow-md-to-pdf\" class=\"button github-star-button\" target=\"_blank\" rel=\"noopener noreferrer\">\n        \u003Cspan class=\"button-text\">GitHub'da Görüntüle\u003C/span>\n        \u003Cspan class=\"star-count\" data-repo=\"BDenizKoca/Tideflow-md-to-pdf\">★ ...\u003C/span>\n      \u003C/a>\n      \u003Ca href=\"https://github.com/sponsors/BDenizKoca\" class=\"button button-secondary\" target=\"_blank\" rel=\"noopener noreferrer\">Sponsor Olun\u003C/a>\n    \u003C/div>\n  \u003C/div>\n  \u003Chr>\n  \u003Cdiv class=\"highlight-section\">\n    \u003Ch2>\u003Cstrong>Tideflow Pro\u003C/strong> ile Yazım Süreçlerinizi Geliştirin\u003C/h2>\n    \u003Cp>Yalnızca bir defaya mahsus $10 ödeme ile profesyoneller, öğrenciler ve ileri düzey kullanıcılar için geliştirilmiş ek özelliklere kalıcı olarak sahip olun. Pro Sürümü şu olanakları sunar:\u003C/p>\n    \u003Cul>\n      \u003Cli>\u003Cstrong>Toplu Dışa Aktarım:\u003C/strong> Bir dizin dolusu Markdown belgesini tek seferde PDF'e dönüştürün.\u003C/li>\n      \u003Cli>\u003Cstrong>Ayar Profillerini İçe/Dışa Aktarma:\u003C/strong> Oluşturduğunuz özel temaları ve ayarları dışa aktararak paylaşın veya farklı cihazlarda kullanın.\u003C/li>\n    \u003C/ul>\n    \u003Ca href=\"https://payhip.com/b/wVBeS\" class=\"button\" target=\"_blank\" rel=\"noopener noreferrer\">Tideflow Pro'yu $10'a Satın Al\u003C/a>\n  \u003C/div>\n\u003C/div>",{"headings":86,"localImagePaths":87,"remoteImagePaths":88,"frontmatter":89,"imagePaths":99},[],[],[],{"title":65,"description":66,"date":90,"updated":91,"slug":62,"order":38,"cover_image":18,"thumbnail":18,"hover_video":19,"slider_items":92,"show_on_homepage":39,"lang":78,"meta_title":79,"meta_description":66,"tags":98},["Date","2023-10-26T00:00:00.000Z"],["Date","2025-10-20T00:00:00.000Z"],[93,94,95,96,97],{"type":22,"src":19},{"type":24,"src":25},{"type":24,"src":27},{"type":24,"src":29},{"type":24,"src":31},[76,34,35,77],[],"tr/tideflow.md","notes",["Map",103,104,130,131],"en/creating-tideflow",{"id":103,"data":105,"body":110,"filePath":111,"digest":112,"rendered":113,"legacyId":129},{"title":106,"description":107,"date":108,"tags":109,"lang":37,"show_on_homepage":39},"Why Markdown at All?","A deep dive into the workflow that led to the creation of Tideflow, a Markdown to PDF editor.",["Date","2025-10-24T00:00:00.000Z"],[101],"## Why markdown at all?\n\nThis all started 4-5 years back when I first started noticing more and more markdowns files popping up in my workflow. I was and still am a naturally very curious person. Which was why I was busy with academia, learning latin, learning coding and bunchmore things that would require me to write some things down. Skip forward 1-2 years and I found myself defaulting to this workflow.\n\n-Write down whatever you want to write without format, as plain text\n-Give an reference doc with the layout and format you want to an AI \n-Then ask the AI to reformat the text and fix the layout without changing the content\n\nWhile this was hit and miss when LLMs were first start becoming popular but the results got progressively better as LLMs got better at their job. \n\nAs you can guess, one of the main bottlenecks of this workflow was the transfer process of the text itself. I first started by trying to use Word and tried to copy and paste content. That quickly become inefficent as the text files got longer (and I despise Word such a heavy and clumsy program for what it needs to do) - so I switched trying to send the whole docx files and that didn't help either as AIs didn't play nicely with Word docs and  the text layout almost inevitably broken. That's when I noticed markdown files. They were small nifty files that stored text like a txt file would. They were easier to transfer and for some reason, AIs worked much better with MD files then any other text format I tried (and I suspect it is because LLMs have been taught with lots of MD files so they feel comfortable navigating around them). Then I also found out about the diverse ecosystem built around them and I was hooked. \n\nSince 2022, I have been using markdown as my main text format. Especially since I have also fallen love with Notepad++ which is just a phenomenal software itself. All my lecture notes, essays, worlbuilding ideas, journals etc. originally start as markdown files which I later convert to some other format for sharing. I do this because I discovered that other people are not so keen on markdown format as I am. Who knew people didn't like reading walls of text? \n\nWriting output has been greatly increased and I was productive more then ever (at least in writing sense) but its kind of a moot victory when you can't easily share the fruit of your labor with others. My meticulisly kept notes would prove too hard to read for my friends, my setting notes for my ttprg campaing mostly shared the same fate. I have tried numereous converters to convert my md files into much more sharable PDFs, yet no matter how much I looked I couldn't find one where I could easily see the end product I am going to get while I am typing.\n\nIn the world of markdown to pdf editors, the general stragety (and its a good stragety) seems to be to convert the markdown content into a stylised HTML page and then utilize the print feature to save it as a PDF. Nothing is wrong with this approach and it gives out a great approximation for what you are going to get. But it is an approximation after all and it is basicly impossible to exactly see what you are going to get until you open the exported PDF. While this style of appromixete preview and rendering could work for others. I get obsessed about little details of my work, like preciesly where one page ends and one page starts. Even if I could insert manual page breaks into the markdown text, the HTML previews wouldn't render that until it is exported. And did you know that good PDF editors doesnt exist? Like literarlly, even if I was okay with adding an step and editing the PDFs myself, I couldn't find a good editor to edit PDFs.\n\nSo this grinded my workflow to a halt. Being a bit of a perfectioniost will do that to you. When I sit down to write, I would like to only focus on the writing part itself. Ideally, I would have some preset themes to handle the layout and style part. And I couldn't figure out how to set up this ideal workflow with markdown files. And that's when I realised that If I wanted an app suitable for my workflow, my only (logical) option was to build a new kind of markdown editor from strach. I had a very clear vision, I wanted to do all my writing and styling without leaving the same app window and end up with an md file for myself and stylised PDF ready for sharing/publishing. With that vision I skecthed a quick app;\n\n-A simple markdown editor with user friendly toolbar on the left\n-Accurately rendered and paginated PDF preview of the exact render you are going to get on the right\n-An easy to use design menu with premade themes and custom theme options.\n\nSo I wrote a basic design document outlying this idea and saved it in markdown. Then I did what I do best and fell into numerous rabbit holes, some are related some are not. Short version is that, I settled on typst which is a blazing fast converter. It uses its own file system (.typ or something) and converts it in to PDF in blazing fast speeds. Much to may dismay, Typst's own editor also doesn't come with true pagianation and relies on the same HTML to print pipeline. But that incredibly fast rendering time gave me an idea. If the conversion is nearly instantaneous, why bother with an approximation at all?\n\n## Everything is a copy of a copy of a copy...\n\nSo, remember how normally most Markdown to pdf convertors, render an htlm preview real-time as you type and use it as an approximation? So I taught why not skip the middle man and get the preview straight from the source - the pdf. So the idea was that the moment user opens an md file (well technicly, the process is little more complicated if PDF preview is hidden in the app), the app would automaticly export it as pdf in the background and it will just serve this temp.pdf file as the preview. Add in an invisible layer of processing where we inject invisible anchors into the markdown that correspond to locations in the PDF, allowing the two windows to scroll in perfect (not really, more like %70 accurate but good enough) synch and voila you got a markdown editor with true live PDF review (Of course you need to scrub those anchors, before you are properly exporting but thats pretty trivial.). \n\nOf course, this is a gross simplification of the process, but that’s essentially how the core development came together. It was an immensely enjoyable project, and I’m genuinely happy with how TideFlow turned out.\n\nIf you have any questions about its development or made anything cool using it (or just want to chat about it) feel free to reach out at denizburakkoca@gmail.com.","src/content/notes/en/creating-tideflow.md","0614e33650da59af",{"html":114,"metadata":115},"\u003Ch2 id=\"why-markdown-at-all\">Why markdown at all?\u003C/h2>\n\u003Cp>This all started 4-5 years back when I first started noticing more and more markdowns files popping up in my workflow. I was and still am a naturally very curious person. Which was why I was busy with academia, learning latin, learning coding and bunchmore things that would require me to write some things down. Skip forward 1-2 years and I found myself defaulting to this workflow.\u003C/p>\n\u003Cp>-Write down whatever you want to write without format, as plain text\n-Give an reference doc with the layout and format you want to an AI\n-Then ask the AI to reformat the text and fix the layout without changing the content\u003C/p>\n\u003Cp>While this was hit and miss when LLMs were first start becoming popular but the results got progressively better as LLMs got better at their job.\u003C/p>\n\u003Cp>As you can guess, one of the main bottlenecks of this workflow was the transfer process of the text itself. I first started by trying to use Word and tried to copy and paste content. That quickly become inefficent as the text files got longer (and I despise Word such a heavy and clumsy program for what it needs to do) - so I switched trying to send the whole docx files and that didn’t help either as AIs didn’t play nicely with Word docs and  the text layout almost inevitably broken. That’s when I noticed markdown files. They were small nifty files that stored text like a txt file would. They were easier to transfer and for some reason, AIs worked much better with MD files then any other text format I tried (and I suspect it is because LLMs have been taught with lots of MD files so they feel comfortable navigating around them). Then I also found out about the diverse ecosystem built around them and I was hooked.\u003C/p>\n\u003Cp>Since 2022, I have been using markdown as my main text format. Especially since I have also fallen love with Notepad++ which is just a phenomenal software itself. All my lecture notes, essays, worlbuilding ideas, journals etc. originally start as markdown files which I later convert to some other format for sharing. I do this because I discovered that other people are not so keen on markdown format as I am. Who knew people didn’t like reading walls of text?\u003C/p>\n\u003Cp>Writing output has been greatly increased and I was productive more then ever (at least in writing sense) but its kind of a moot victory when you can’t easily share the fruit of your labor with others. My meticulisly kept notes would prove too hard to read for my friends, my setting notes for my ttprg campaing mostly shared the same fate. I have tried numereous converters to convert my md files into much more sharable PDFs, yet no matter how much I looked I couldn’t find one where I could easily see the end product I am going to get while I am typing.\u003C/p>\n\u003Cp>In the world of markdown to pdf editors, the general stragety (and its a good stragety) seems to be to convert the markdown content into a stylised HTML page and then utilize the print feature to save it as a PDF. Nothing is wrong with this approach and it gives out a great approximation for what you are going to get. But it is an approximation after all and it is basicly impossible to exactly see what you are going to get until you open the exported PDF. While this style of appromixete preview and rendering could work for others. I get obsessed about little details of my work, like preciesly where one page ends and one page starts. Even if I could insert manual page breaks into the markdown text, the HTML previews wouldn’t render that until it is exported. And did you know that good PDF editors doesnt exist? Like literarlly, even if I was okay with adding an step and editing the PDFs myself, I couldn’t find a good editor to edit PDFs.\u003C/p>\n\u003Cp>So this grinded my workflow to a halt. Being a bit of a perfectioniost will do that to you. When I sit down to write, I would like to only focus on the writing part itself. Ideally, I would have some preset themes to handle the layout and style part. And I couldn’t figure out how to set up this ideal workflow with markdown files. And that’s when I realised that If I wanted an app suitable for my workflow, my only (logical) option was to build a new kind of markdown editor from strach. I had a very clear vision, I wanted to do all my writing and styling without leaving the same app window and end up with an md file for myself and stylised PDF ready for sharing/publishing. With that vision I skecthed a quick app;\u003C/p>\n\u003Cp>-A simple markdown editor with user friendly toolbar on the left\n-Accurately rendered and paginated PDF preview of the exact render you are going to get on the right\n-An easy to use design menu with premade themes and custom theme options.\u003C/p>\n\u003Cp>So I wrote a basic design document outlying this idea and saved it in markdown. Then I did what I do best and fell into numerous rabbit holes, some are related some are not. Short version is that, I settled on typst which is a blazing fast converter. It uses its own file system (.typ or something) and converts it in to PDF in blazing fast speeds. Much to may dismay, Typst’s own editor also doesn’t come with true pagianation and relies on the same HTML to print pipeline. But that incredibly fast rendering time gave me an idea. If the conversion is nearly instantaneous, why bother with an approximation at all?\u003C/p>\n\u003Ch2 id=\"everything-is-a-copy-of-a-copy-of-a-copy\">Everything is a copy of a copy of a copy…\u003C/h2>\n\u003Cp>So, remember how normally most Markdown to pdf convertors, render an htlm preview real-time as you type and use it as an approximation? So I taught why not skip the middle man and get the preview straight from the source - the pdf. So the idea was that the moment user opens an md file (well technicly, the process is little more complicated if PDF preview is hidden in the app), the app would automaticly export it as pdf in the background and it will just serve this temp.pdf file as the preview. Add in an invisible layer of processing where we inject invisible anchors into the markdown that correspond to locations in the PDF, allowing the two windows to scroll in perfect (not really, more like %70 accurate but good enough) synch and voila you got a markdown editor with true live PDF review (Of course you need to scrub those anchors, before you are properly exporting but thats pretty trivial.).\u003C/p>\n\u003Cp>Of course, this is a gross simplification of the process, but that’s essentially how the core development came together. It was an immensely enjoyable project, and I’m genuinely happy with how TideFlow turned out.\u003C/p>\n\u003Cp>If you have any questions about its development or made anything cool using it (or just want to chat about it) feel free to reach out at \u003Ca href=\"mailto:denizburakkoca@gmail.com\">denizburakkoca@gmail.com\u003C/a>.\u003C/p>",{"headings":116,"localImagePaths":124,"remoteImagePaths":125,"frontmatter":126,"imagePaths":128},[117,121],{"depth":118,"slug":119,"text":120},2,"why-markdown-at-all","Why markdown at all?",{"depth":118,"slug":122,"text":123},"everything-is-a-copy-of-a-copy-of-a-copy","Everything is a copy of a copy of a copy…",[],[],{"title":106,"description":107,"date":127,"lang":37,"show_on_homepage":39},["Date","2025-10-24T00:00:00.000Z"],[],"en/creating-tideflow.md","tr/creating-tideflow",{"id":130,"data":132,"body":137,"filePath":138,"digest":139,"rendered":140,"legacyId":154},{"title":133,"description":134,"date":135,"tags":136,"lang":78,"show_on_homepage":39},"Markdown Neden Kullanılmalı?","Markdown'dan PDF'e dönüştürücü Tideflow'un oluşturulmasına yol açan iş akışına derinlemesine bir bakış.",["Date","2025-10-24T00:00:00.000Z"],[101],"## Markdown Neden Kullanılmalı?\n\nBu durum, 4-5 yıl önce, iş akışımda giderek daha fazla Markdown dosyasının belirmeye başladığını ilk fark ettiğimde başladı. Doğam gereği o zaman da, şimdi de çok meraklı bir kişiydim. Bu nedenle akademik çalışmalarla, Latince öğrenmekle, kodlama öğrenmekle ve bir şeyler yazmamı gerektirecek pek çok başka şeyle meşguldüm. Bir-iki yıl ileri sardığımızda, kendimi bu iş akışına yönelmiş buldum.\n\n- Yazmak istediğiniz her şeyi biçimlendirme olmaksızın, düz metin olarak kaleme alın.\n- Yapay zekaya, istediğiniz düzen ve biçimi içeren bir örnek belge sunun.\n- Ardından, yapay zekadan içeriği değiştirmeksizin metni yeniden biçimlendirmesini ve düzeni düzeltmesini talep edin.\n\nBüyük Dil Modelleri (BDM'ler) ilk yaygınlaşmaya başladığında bu durum başlangıçta tutarsızlık gösterse de, BDM'ler görevlerini daha iyi icra ettikçe elde edilen neticeler aşamalı olarak iyileşme kaydetti.\n\nTahmin edebileceğiniz üzere, bu iş akışının başlıca darboğazlarından biri metnin kendisinin aktarım süreciydi. İlk olarak Word kullanmayı deneyerek başladım ve içeriği kopyalama ve yapıştırma yolunu denedim. Metin dosyaları uzadıkça bu durum kısa sürede verimsizleşti (ve Word'ü yapması gereken iş için böylesine ağır ve hantal bir yazılım olarak hiç sevmem) – bu yüzden tüm docx dosyalarını göndermeyi denemeye geçtim, ancak bu da fayda etmedi; zira yapay zekalar Word belgeleriyle uyumlu çalışmıyor ve metin düzeni neredeyse kaçınılmaz olarak bozuluyordu. İşte o zaman markdown dosyalarını fark ettim. Bunlar, metni bir txt dosyası gibi saklayan küçük, kullanışlı dosyalardı. Aktarımı daha kolaydı ve nedense, yapay zekalar denediğim diğer metin biçimlerinden çok daha iyi çalışıyordu (ve sanırım bunun nedeni, Büyük Dil Modellerinin çok sayıda MD dosyasıyla eğitilmiş olmaları ve bu sayede onlarda rahatça gezinmeleriydi). Sonra ayrıca onların etrafında gelişen çeşitli ortamı öğrendim ve kendimi kaptırdım.\n\n2022 yılından bu yana, başlıca metin biçimi olarak Markdown kullanıyorum. Özellikle de başlı başına olağanüstü bir yazılım olan Notepad++'a hayran kaldığımdan beri. Tüm ders notlarım, denemelerim, kurgusal evren tasarımlarım, günlüklerim ve benzerleri başlangıçta Markdown dosyaları olarak başlar; bunları daha sonra paylaşmak üzere başka bir biçime dönüştürürüm. Bunu yapmamın nedeni, başkalarının Markdown biçimine benim kadar sıcak bakmadığını fark etmemdir. İnsanların uzun metin yığınlarını okumayı sevmediğini kim bilebilirdi ki?\n\nYazım çıktım büyük ölçüde arttı ve (en azından yazım açısından) her zamankinden daha verimli oldum; ancak emeğimin ürününü başkalarıyla kolayca paylaşamadığınızda bu, anlamsız bir zafer oluyor. Titizlikle tuttuğum notlarım arkadaşlarım için okunması çok zor oluyordu; masaüstü rol yapma oyunu (TTRPG) serüvenim için hazırladığım kurgu notlarım da çoğunlukla aynı kaderi paylaştı. Md dosyalarımı çok daha paylaşılabilir PDF'lere dönüştürmek için sayısız çevirici denedim; ancak ne kadar arasam da, yazarken elde edeceğim son ürünü kolayca görebileceğim birini bulamadım.\n\nMarkdown'dan PDF'e dönüştürücülerin dünyasında, genel yöntem (ve bu iyi bir yöntemdir) markdown içeriğini biçimlendirilmiş bir HTML sayfasına çevirmek ve ardından yazdırma özelliğini kullanarak PDF olarak kaydetmek gibi görünmektedir. Bu yaklaşımda yanlış bir şey yoktur ve elde edeceğiniz şeye dair harika bir yaklaşık sonuç sunar. Ancak bu, nihayetinde bir yaklaşımdır ve dışa aktarılan PDF'i açana dek tam olarak ne elde edeceğinizi görmek neredeyse olanaksızdır. Bu tür yaklaşık önizleme ve görselleştirme başkaları için işe yarasa da, ben işimin küçük ayrıntılarına takıntılıyımdır, tıpkı bir sayfanın nerede bitip diğerinin nerede başladığı gibi. Markdown metnine elle sayfa sonları ekleyebilsem bile, HTML önizlemeleri bu durumu dışa aktarılana dek göstermezdi. Ve iyi PDF düzenleyicilerinin var olmadığını biliyor muydunuz? Gerçekten de, bir adım daha ekleyip PDF'leri kendim düzenlemeye razı olsam bile, PDF düzenlemek için iyi bir düzenleyici bulamadım.\n\nBu durum, iş akışımı sekteye uğrattı. Biraz mükemmeliyetçi olmak bunu size yapar. Yazmaya oturduğumda, yalnızca yazım işinin kendisine yoğunlaşmak isterim. En uygunu, düzen ve biçem kısmını halletmek için önceden saptanmış bazı biçemlere sahip olmaktı. Ve Markdown dosyalarıyla bu kusursuz iş akışını nasıl kuracağımı çözemedim. İşte o zaman fark ettim ki, iş akışıma uygun bir uygulama istiyorsam, tek akılcı seçeneğim sıfırdan yeni bir tür Markdown düzenleyici inşa etmekti. Çok net bir öngörüm vardı; tüm yazım ve biçimlendirme işlerimi aynı uygulama penceresinden ayrılmadan yapmak ve kendim için bir md dosyası ile paylaşım/yayımlama için hazır, biçimlendirilmiş bir PDF elde etmek istiyordum. Bu öngörüyle hızla bir uygulama taslağı çizdim;\n\n- Solda, kullanıcıya uygun bir araç çubuğu barındıran, yalın bir işaretleme dili düzenleyici.\n- Sağda, alacağınız çıktının birebir aynısını gösteren, doğru biçimde oluşturulmuş ve sayfalandırılmış bir PDF ön görünümü.\n- Hazır biçemler ve kişiselleştirilebilir biçem seçenekleri içeren, kullanımı kolay bir tasarım seçenekleri listesi.\n\nBu fikri ana hatlarıyla belirten temel bir tasarım belgesi yazdım ve onu markdown biçiminde kaydettim. Ardından en iyi yaptığım şeyi yaparak sayısız yan konuya daldım; bunların bazıları ilgiliydi, bazıları ise değildi. Kısacası, son derece hızlı bir dönüştürücü olan Typst'te karar kıldım. Kendi dosya sistemini (.typ veya benzeri) kullanıyor ve belgeleri ışık hızında PDF'e çeviriyor. Ne yazık ki, Typst'in kendi düzenleyicisi de gerçek sayfalama özelliğine sahip değil ve aynı HTML'den baskıya dönüştürme yöntemine dayanıyor. Ancak bu inanılmaz hızlı oluşturma süresi bana bir fikir verdi. Dönüştürme neredeyse anlık gerçekleşiyorsa, neden bir yaklaşımla uğraşalım ki?\n\n## Her şey bir eşinin eşinin eşidir...\n\nPeki, hatırlarsınız ki çoğu Markdown'ı PDF'e çeviren araç, siz yazdıkça anında bir HTML önizlemesi oluşturur ve bunu bir yaklaşık olarak kullanır? Ben de düşündüm ki neden aracıyı aradan çıkarıp önizlemeyi doğrudan kaynaktan, yani PDF'ten almayalım?\n\nFikir şuydu ki, kullanıcı bir MD dosyası açtığı an (teknik açıdan, eğer PDF önizlemesi uygulamada gizli ise süreç biraz daha giriftleşir), uygulama onu arka planda kendiliğinden PDF olarak dışa aktarır ve bu geçici PDF dosyasını önizleme olarak kullanır.\n\nBuna, Markdown'a PDF'teki yerlere denk düşen görünmez çapa noktaları yerleştirdiğimiz görünmez bir işleme katmanı da eklenince, iki pencerenin kusursuz (tam olarak değil, daha çok %70 isabetli ama yeterli) eşzamanlılıkta kaymasını sağlar ve işte size gerçek zamanlı PDF önizlemeli bir Markdown düzenleyiciye sahip olursunuz. (Elbette, düzgün bir biçimde dışa aktarmadan evvel bu çapa noktalarını temizlemeniz icap eder; ancak bu oldukça önemsiz bir ayrıntıdır.)\n\nElbette, bu sürecin aşırı bir basitleştirmesidir, ancak ana geliştirme esasen bu şekilde bir araya geldi. Son derece keyifli bir tasarıydı ve TideFlow'un sonucundan içtenlikle memnunum.\n\nGelişimi hakkında herhangi bir sorunuz olursa, ya da onu kullanarak kayda değer bir yapıt ortaya koyduysanız (ya da yalnızca onun hakkında konuşmak isterseniz), denizburakkoca@gmail.com üzerinden bize ulaşmaktan çekinmeyiniz.","src/content/notes/tr/creating-tideflow.md","f07cc5e75a0ebcaa",{"html":141,"metadata":142},"\u003Ch2 id=\"markdown-neden-kullanılmalı\">Markdown Neden Kullanılmalı?\u003C/h2>\n\u003Cp>Bu durum, 4-5 yıl önce, iş akışımda giderek daha fazla Markdown dosyasının belirmeye başladığını ilk fark ettiğimde başladı. Doğam gereği o zaman da, şimdi de çok meraklı bir kişiydim. Bu nedenle akademik çalışmalarla, Latince öğrenmekle, kodlama öğrenmekle ve bir şeyler yazmamı gerektirecek pek çok başka şeyle meşguldüm. Bir-iki yıl ileri sardığımızda, kendimi bu iş akışına yönelmiş buldum.\u003C/p>\n\u003Cul>\n\u003Cli>Yazmak istediğiniz her şeyi biçimlendirme olmaksızın, düz metin olarak kaleme alın.\u003C/li>\n\u003Cli>Yapay zekaya, istediğiniz düzen ve biçimi içeren bir örnek belge sunun.\u003C/li>\n\u003Cli>Ardından, yapay zekadan içeriği değiştirmeksizin metni yeniden biçimlendirmesini ve düzeni düzeltmesini talep edin.\u003C/li>\n\u003C/ul>\n\u003Cp>Büyük Dil Modelleri (BDM’ler) ilk yaygınlaşmaya başladığında bu durum başlangıçta tutarsızlık gösterse de, BDM’ler görevlerini daha iyi icra ettikçe elde edilen neticeler aşamalı olarak iyileşme kaydetti.\u003C/p>\n\u003Cp>Tahmin edebileceğiniz üzere, bu iş akışının başlıca darboğazlarından biri metnin kendisinin aktarım süreciydi. İlk olarak Word kullanmayı deneyerek başladım ve içeriği kopyalama ve yapıştırma yolunu denedim. Metin dosyaları uzadıkça bu durum kısa sürede verimsizleşti (ve Word’ü yapması gereken iş için böylesine ağır ve hantal bir yazılım olarak hiç sevmem) – bu yüzden tüm docx dosyalarını göndermeyi denemeye geçtim, ancak bu da fayda etmedi; zira yapay zekalar Word belgeleriyle uyumlu çalışmıyor ve metin düzeni neredeyse kaçınılmaz olarak bozuluyordu. İşte o zaman markdown dosyalarını fark ettim. Bunlar, metni bir txt dosyası gibi saklayan küçük, kullanışlı dosyalardı. Aktarımı daha kolaydı ve nedense, yapay zekalar denediğim diğer metin biçimlerinden çok daha iyi çalışıyordu (ve sanırım bunun nedeni, Büyük Dil Modellerinin çok sayıda MD dosyasıyla eğitilmiş olmaları ve bu sayede onlarda rahatça gezinmeleriydi). Sonra ayrıca onların etrafında gelişen çeşitli ortamı öğrendim ve kendimi kaptırdım.\u003C/p>\n\u003Cp>2022 yılından bu yana, başlıca metin biçimi olarak Markdown kullanıyorum. Özellikle de başlı başına olağanüstü bir yazılım olan Notepad++‘a hayran kaldığımdan beri. Tüm ders notlarım, denemelerim, kurgusal evren tasarımlarım, günlüklerim ve benzerleri başlangıçta Markdown dosyaları olarak başlar; bunları daha sonra paylaşmak üzere başka bir biçime dönüştürürüm. Bunu yapmamın nedeni, başkalarının Markdown biçimine benim kadar sıcak bakmadığını fark etmemdir. İnsanların uzun metin yığınlarını okumayı sevmediğini kim bilebilirdi ki?\u003C/p>\n\u003Cp>Yazım çıktım büyük ölçüde arttı ve (en azından yazım açısından) her zamankinden daha verimli oldum; ancak emeğimin ürününü başkalarıyla kolayca paylaşamadığınızda bu, anlamsız bir zafer oluyor. Titizlikle tuttuğum notlarım arkadaşlarım için okunması çok zor oluyordu; masaüstü rol yapma oyunu (TTRPG) serüvenim için hazırladığım kurgu notlarım da çoğunlukla aynı kaderi paylaştı. Md dosyalarımı çok daha paylaşılabilir PDF’lere dönüştürmek için sayısız çevirici denedim; ancak ne kadar arasam da, yazarken elde edeceğim son ürünü kolayca görebileceğim birini bulamadım.\u003C/p>\n\u003Cp>Markdown’dan PDF’e dönüştürücülerin dünyasında, genel yöntem (ve bu iyi bir yöntemdir) markdown içeriğini biçimlendirilmiş bir HTML sayfasına çevirmek ve ardından yazdırma özelliğini kullanarak PDF olarak kaydetmek gibi görünmektedir. Bu yaklaşımda yanlış bir şey yoktur ve elde edeceğiniz şeye dair harika bir yaklaşık sonuç sunar. Ancak bu, nihayetinde bir yaklaşımdır ve dışa aktarılan PDF’i açana dek tam olarak ne elde edeceğinizi görmek neredeyse olanaksızdır. Bu tür yaklaşık önizleme ve görselleştirme başkaları için işe yarasa da, ben işimin küçük ayrıntılarına takıntılıyımdır, tıpkı bir sayfanın nerede bitip diğerinin nerede başladığı gibi. Markdown metnine elle sayfa sonları ekleyebilsem bile, HTML önizlemeleri bu durumu dışa aktarılana dek göstermezdi. Ve iyi PDF düzenleyicilerinin var olmadığını biliyor muydunuz? Gerçekten de, bir adım daha ekleyip PDF’leri kendim düzenlemeye razı olsam bile, PDF düzenlemek için iyi bir düzenleyici bulamadım.\u003C/p>\n\u003Cp>Bu durum, iş akışımı sekteye uğrattı. Biraz mükemmeliyetçi olmak bunu size yapar. Yazmaya oturduğumda, yalnızca yazım işinin kendisine yoğunlaşmak isterim. En uygunu, düzen ve biçem kısmını halletmek için önceden saptanmış bazı biçemlere sahip olmaktı. Ve Markdown dosyalarıyla bu kusursuz iş akışını nasıl kuracağımı çözemedim. İşte o zaman fark ettim ki, iş akışıma uygun bir uygulama istiyorsam, tek akılcı seçeneğim sıfırdan yeni bir tür Markdown düzenleyici inşa etmekti. Çok net bir öngörüm vardı; tüm yazım ve biçimlendirme işlerimi aynı uygulama penceresinden ayrılmadan yapmak ve kendim için bir md dosyası ile paylaşım/yayımlama için hazır, biçimlendirilmiş bir PDF elde etmek istiyordum. Bu öngörüyle hızla bir uygulama taslağı çizdim;\u003C/p>\n\u003Cul>\n\u003Cli>Solda, kullanıcıya uygun bir araç çubuğu barındıran, yalın bir işaretleme dili düzenleyici.\u003C/li>\n\u003Cli>Sağda, alacağınız çıktının birebir aynısını gösteren, doğru biçimde oluşturulmuş ve sayfalandırılmış bir PDF ön görünümü.\u003C/li>\n\u003Cli>Hazır biçemler ve kişiselleştirilebilir biçem seçenekleri içeren, kullanımı kolay bir tasarım seçenekleri listesi.\u003C/li>\n\u003C/ul>\n\u003Cp>Bu fikri ana hatlarıyla belirten temel bir tasarım belgesi yazdım ve onu markdown biçiminde kaydettim. Ardından en iyi yaptığım şeyi yaparak sayısız yan konuya daldım; bunların bazıları ilgiliydi, bazıları ise değildi. Kısacası, son derece hızlı bir dönüştürücü olan Typst’te karar kıldım. Kendi dosya sistemini (.typ veya benzeri) kullanıyor ve belgeleri ışık hızında PDF’e çeviriyor. Ne yazık ki, Typst’in kendi düzenleyicisi de gerçek sayfalama özelliğine sahip değil ve aynı HTML’den baskıya dönüştürme yöntemine dayanıyor. Ancak bu inanılmaz hızlı oluşturma süresi bana bir fikir verdi. Dönüştürme neredeyse anlık gerçekleşiyorsa, neden bir yaklaşımla uğraşalım ki?\u003C/p>\n\u003Ch2 id=\"her-şey-bir-eşinin-eşinin-eşidir\">Her şey bir eşinin eşinin eşidir…\u003C/h2>\n\u003Cp>Peki, hatırlarsınız ki çoğu Markdown’ı PDF’e çeviren araç, siz yazdıkça anında bir HTML önizlemesi oluşturur ve bunu bir yaklaşık olarak kullanır? Ben de düşündüm ki neden aracıyı aradan çıkarıp önizlemeyi doğrudan kaynaktan, yani PDF’ten almayalım?\u003C/p>\n\u003Cp>Fikir şuydu ki, kullanıcı bir MD dosyası açtığı an (teknik açıdan, eğer PDF önizlemesi uygulamada gizli ise süreç biraz daha giriftleşir), uygulama onu arka planda kendiliğinden PDF olarak dışa aktarır ve bu geçici PDF dosyasını önizleme olarak kullanır.\u003C/p>\n\u003Cp>Buna, Markdown’a PDF’teki yerlere denk düşen görünmez çapa noktaları yerleştirdiğimiz görünmez bir işleme katmanı da eklenince, iki pencerenin kusursuz (tam olarak değil, daha çok %70 isabetli ama yeterli) eşzamanlılıkta kaymasını sağlar ve işte size gerçek zamanlı PDF önizlemeli bir Markdown düzenleyiciye sahip olursunuz. (Elbette, düzgün bir biçimde dışa aktarmadan evvel bu çapa noktalarını temizlemeniz icap eder; ancak bu oldukça önemsiz bir ayrıntıdır.)\u003C/p>\n\u003Cp>Elbette, bu sürecin aşırı bir basitleştirmesidir, ancak ana geliştirme esasen bu şekilde bir araya geldi. Son derece keyifli bir tasarıydı ve TideFlow’un sonucundan içtenlikle memnunum.\u003C/p>\n\u003Cp>Gelişimi hakkında herhangi bir sorunuz olursa, ya da onu kullanarak kayda değer bir yapıt ortaya koyduysanız (ya da yalnızca onun hakkında konuşmak isterseniz), \u003Ca href=\"mailto:denizburakkoca@gmail.com\">denizburakkoca@gmail.com\u003C/a> üzerinden bize ulaşmaktan çekinmeyiniz.\u003C/p>",{"headings":143,"localImagePaths":149,"remoteImagePaths":150,"frontmatter":151,"imagePaths":153},[144,146],{"depth":118,"slug":145,"text":133},"markdown-neden-kullanılmalı",{"depth":118,"slug":147,"text":148},"her-şey-bir-eşinin-eşinin-eşidir","Her şey bir eşinin eşinin eşidir…",[],[],{"title":133,"description":134,"date":152,"lang":78,"show_on_homepage":39},["Date","2025-10-24T00:00:00.000Z"],[],"tr/creating-tideflow.md"]